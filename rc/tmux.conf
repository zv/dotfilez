# zv's tmux deluxe ##########################################

set -g default-terminal "screen-256color"

# auto window rename
setw -g automatic-rename 

# 64k lines of history
setw -g history-limit 64000 

# Don't automatically set title
set -g set-titles off

# Window Options
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Activity monitoring 
setw -g monitor-activity off
set -g visual-activity off

# Don't let crazy characters mess up my window name
set -g allow-rename off

# style #####################################################

# To ease the use of tmux-inside-tmux (e.g through SSH), we set the colors
# and prefix key modifier which may distinguish one from another, allowing
# simultaneous use in tandem
%if "${SSH_CONNECTION}"
MOD=C # Use Ctrl as the prefix key modifier
MOD2=M
background=black
foreground=white
%else
MOD=M # Use Alt as the prefix key modifier
MOD2=C
background=white
foreground=black
%endif

set -g pane-active-border-style "fg=$background" # Intentionally mismatched to highlight the active window
set -g message-style "fg=bright$foreground,bg=$background"
set -g message-command-style "fg=$foreground,bg=$background"

# Status Bar
set -g status on
set -g status-keys vi
set -g status-justify centre
set -g status-interval 10
set -g status-style "bg=$background"

## Left Status Bar
set -g status-left "#[fg=bright$foreground,bg=bright$background] #{session_name} #{window_flags} "
set -g status-right "#[fg=bright$foreground,bg=bright$background] #{host_short} "

## Window Status
status_format=" #{window_index} Â» #{window_name} "
set -g window-status-format "$status_format"
set -g window-status-current-format "#[fg=$foreground,bold,bg=bright$background]$status_format"
set -g window-status-activity-style "fg=red,bold"
set -g window-status-style "fg=$foreground,bg=$background"

# keybindings ###############################################

set -g prefix $MOD-k

bind-key $MOD-h previous-window
bind-key $MOD-l next-window
bind-key $MOD-b move-window -r # Reorder (Balance) window numbers
bind-key $MOD-r command-prompt 'rename-session %%'

# Copy the current session contents
bind-key $MOD2-p pipe-pane -o "cat >> /tmp/tmux-output.#S-#W-#I"

# split our windows with classic vim bindings
bind-key s split-window -v
bind-key v split-window -h

# Vi copypaste mode
set-window-option -g mode-keys vi
bind Escape copy-mode
bind-key -T copy-mode-vi 'v'   send-keys -X begin-selection
bind-key -T copy-mode-vi 'C-v' send-keys -X rectangle-toggle
bind-key -T copy-mode-vi 'u'   send-keys -X halfpage-up
bind-key -T copy-mode-vi 'd'   send-keys -X halfpage-down
bind-key -T copy-mode-vi 'y'   send-keys -X copy-pipe 'xclip -in -selection clipboard' copy-selection-and-cancel
bind-key -T copy-mode-vi '*'   send-keys -X copy-pipe 'cat > /tmp/tmux_select.#S-#W-#I'

bind-key ] paste-buffer
bind-key P choose-buffer

# use vim-like keys for splits and windows
bind-key : command-prompt
bind-key v split-window -h -c '#{pane_current_path}'
bind-key s split-window -v -c '#{pane_current_path}'
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key q display-panes
bind-key c new-window -c '#{pane_current_path}'

# Other key bindings
bind-key r command-prompt 'rename-window %%'

# reorganize windows in the next predefined window layout
bind-key enter next-layout

# Reload config reasonably
bind-key R source-file ~/.tmux.conf \; display-message "Config reloaded..."
