# ------------------------------------------------------------------------------
# SCREEN SETTINGS
# ------------------------------------------------------------------------------

shell /usr/bin/zsh

startup_message off
nethack on

#defflow on # will force screen to process ^S/^Q
deflogin on
autodetach on

# turn visual bell on
vbell on

# define a bigger scrollback, default is 100 lines
defscrollback 4096

defutf8 on
defkanji utf-8
encoding utf-8 utf-8
defencoding utf-8

# automatically set title
setenv SCREENTITLE auto
startup_message       off             # default: on
# caption always "%{=b dy}%D, %d. %M '%y %{=b dw}%c:%s %{=b dy}{ %{= dg}${USER}@%{= dr}%H %{=b dy}} %{=b d2}%l %{=b dy}%u %{=b dy} %={ %?%{= dc}%-Lw%?%{+b dy}(%{-b r}%n:%t%{+b dy})%?(%u)%?%{-dc}%?%{= dc}%+Lw%? %{=b dy}}"

caption always
caption string '%{kw}  %{kw}[%n:%t]%{-} '
hardstatus alwayslastline '%{= kd}%{= Kd} %1= %>%-w%50>%{= Kr}[%{= KW}%n:%t%{= Kr}]%{= Kd}%{= Kd}%+w %-= %{KG} %{Kd}%-56< [host:%{Kw}%H%{Kd}]%{= Kd}[time:%{Kw}%c%{Kd}][load:%{Bw}%-l%{Kd}]  '


# ------------------------------------------------------------------------------
# SCREEN KEYBINDINGS
# ------------------------------------------------------------------------------

escape ^Kk

bind w eval 'echo "Operate window"' 'command -c operate'
bind -c operate ^]  command
bind -c operate j eval 'focus down' 'command -c operate'
bind -c operate k eval 'focus up' 'command -c operate'
bind -c operate h eval 'focus left' 'command -c operate'
bind -c operate l eval 'focus right' 'command -c operate'
bind -c operate t eval 'focus top' 'command -c operate'
bind -c operate b eval 'focus bottom' 'command -c operate'
bind -c operate + eval 'resize -v +1' 'command -c operate'
bind -c operate - eval 'resize -v -1' 'command -c operate'
bind -c operate > eval 'resize -h +1' 'command -c operate'
bind -c operate < eval 'resize -h -1' 'command -c operate'
bind -c operate = eval 'resize -v =' 'command -c operate'
bind -c operate + eval 'resize -h =' 'command -c operate'
bind -c operate s eval 'split' 'command -c operate'
bind -c operate c eval 'screen' 'command -c operate'
bind -c operate x eval 'remove' 'command -c operate'
bind -c operate v eval 'split -v' 'command -c operate'
bind -c operate 0 eval 'select 0' 'command -c operate'
bind -c operate 1 eval 'select 1' 'command -c operate'
bind -c operate 2 eval 'select 2' 'command -c operate'
bind -c operate 3 eval 'select 3' 'command -c operate'
bind -c operate 4 eval 'select 4' 'command -c operate'
bind -c operate 5 eval 'select 5' 'command -c operate'
bind -c operate 6 eval 'select 6' 'command -c operate'
bind -c operate 7 eval 'select 7' 'command -c operate'
bind -c operate 8 eval 'select 8' 'command -c operate'
bind -c operate 9 eval 'select 9' 'command -c operate'

bind x remove
bind j eval 'focus down'
bind k eval 'focus up'
bind h eval 'focus left'
bind l eval 'focus right'
bind + eval 'resize -v +1'
bind - eval 'resize -v -1'
bind > eval 'resize -h +1'
bind < eval 'resize -h -1'
bind v eval 'split -v' focus screen
bind s eval 'split' focus screen
bind = eval 'resize -v ='
bind + eval 'resize -h +'

# Remove some stupid / dangerous key bindings
bind ^k
#bind L
bind ^\
# Make them better
bind \\ quit
bind K kill
#bind I login on
#bind O login off
bind } history

# An example of a "screen scraper" which will launch urlview on the current
# screen window
#
#bind ^B eval "hardcopy_append off" "hardcopy -h $HOME/.screen-urlview" "screen urlview $HOME/.screen-urlview"

# ------------------------------------------------------------------------------
# TERMINAL SETTINGS
# ------------------------------------------------------------------------------

# The vt100 description does not mention "dl". *sigh*
termcapinfo vt100 dl=5\E[M

# turn sending of screen messages to hardstatus off
hardstatus off
# Set the hardstatus prop on gui terms to set the titlebar/icon title
termcapinfo xterm*|rxvt*|kterm*|Eterm* hs:ts=\E]0;:fs=\007:ds=\E]0;\007
# use this for the hard status string
#hardstatus alwayslastline I%wI
#hardstatus string "%h%? users: %u%?"

# An alternative hardstatus to display a bar at the bottom listing the
# windownames and highlighting the current windowname in blue. (This is only
# enabled if there is no hardstatus setting for your terminal)
#
#hardstatus alwayslastline "%-Lw%{= BW}%50>%n%f* %t%{-}%+Lw%<"
hardstatus alwayslastline "%{= dw} %`%-w%{=bu kw}%n %t%{-}%+w"

# set these terminals up to be 'optimal' instead of vt100
termcapinfo xterm*|linux*|rxvt*|Eterm* OP

# Change the xterm initialization string from is2=\E[!p\E[?3;4l\E[4l\E>
# (This fixes the "Aborted because of window size change" konsole symptoms found
#  in bug #134198)
termcapinfo xterm 'is=\E[r\E[m\E[2J\E[H\E[?7h\E[?1;4;6l'

# To get screen to add lines to xterm's scrollback buffer, uncomment the
# following termcapinfo line which tells xterm to use the normal screen buffer
# (which has scrollback), not the alternate screen buffer.
#
#termcapinfo xterm|xterms|xs|rxvt ti@:te@

termcapinfo xterm* 'is=\E[r\E[m\E[2J\E[H\E[?7h\E[?1;4;6l'
defbce "on"
# 256色表示設定
#term xterm-256color

# ------------------------------------------------------------------------------
# STARTUP SCREENS
# ------------------------------------------------------------------------------

# Example of automatically running some programs in windows on screen startup.
#
#   The following will open top in the first window, an ssh session to monkey
#   in the next window, and then open mutt and tail in windows 8 and 9
#   respectively.
#
# screen top
# screen -t monkey ssh monkey
# screen -t mail 8 mutt
# screen -t daemon 9 tail -f /var/log/daemon.log

#idle 1200
#blankerprg /opt/local/bin/fortune
#

termcapinfo xterm* ti@:te@