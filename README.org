* dotfilez
  #+CAPTION: the_setup
  #+NAME:   setup.png
  [[./data/setup.png]]

  The setup of my ride has been steadily growing for almost 13 years now. In the
  vast sea of rc files, =/etc= config clauses, sensitive and public
  cryptographic key material, documents, default package lists and custom
  patches that I apply to the systems I run. I had to come up with a way to manage
  it all in some sane fashion.

  Dotfilez is an attempt to keep a configuration framework for my personal use
  online. You are welcome to modify it if you think it could be useful to you
  too.
* Public Keys
** GPG
   #+BEGIN_EXAMPLE
   -----BEGIN PGP PUBLIC KEY BLOCK-----

   mQENBFJrVXsBCADBVWMF1RXntd24chyCJDK3xjQYkrOIk7GFJuGi/p1Pc7w+LI/5
   cplC9HI/hfBSzH5fBdsmf68nqFB9rBIm58sPt/fiGbudI7JqNeVhhw2MvtK9OVn8
   V7wnpKvdId2EdbTLFMWVOXlj9zqy2T3aEBBgDMZ6ziMqX6JP2FxGm+bGStZp/ZQ1
   aJk7i0s+Ib4a3YqyEMK+QeIds0ZLR3f+l0eqOKph4yIj3L30zoKItN8FFVCl+jxl
   mA9ZAmPxs6V/UBtHsgyBOB3quTXmfct6QofWSEIy5kwT1cd7dmpB+rBCZZIG8Gos
   ntZ57KmVBguo8fIL+RYG5zMgbbyGclB6EEvrABEBAAG0JFplcGh5ciBQZWxsZXJp
   biAobWFpbikgPHp2QG54dnIub3JnPokBOwQTAQoAJQIbAwYLCQgHAwIGFQgCCQoL
   BBYCAwECHgECF4AFAlYJ2dwCGQEACgkQ9vLQRF3Bcvi5jgf/W8bPe1JpNRNxB0iO
   /dGSuka6cGf9+IHKZiPZz82WHS54oy7jwGaAp33vTvXHatUnlOTbCv+x3tOe8jgM
   /Upy7EulHwwuQoVUBsHN8kVJeD5MtKH48gLYhOvd8iGBhWjllQ/0xzt/vUz/53WI
   YphSTdM7qDtsggFm7Uziw+JKbYgnMgP5dHuvHiQBku3Reox9S4jkdtRdfy4easzV
   GhxFXmPdaQhCldRJOygDRLBI2yVhiGKJ1begMAFe56kYcX/qH2ol5l8BYNOt8nCZ
   9rU06nvqMsx2nHhZgU8YvvQ7IJLZUSV1stPn827uqzolIVUHzDCQUhjhb3qUbB8o
   1I7OV4kBOAQTAQIAIgUCUmtVewIbAwYLCQgHAwIGFQgCCQoLBBYCAwECHgECF4AA
   CgkQ9vLQRF3Bcvjc2Af9ELwvJoehI+fdW3tzUNdnxnm15cVITlrBwuMpdIGsCMMl
   d7MvNKp1E3HGKnFidFohMqQQV4SafT71uE/kG9K6H6ZTzo761q+5ZXiFSECLQBci
   ueiGd/JsFKXojCDPeUb7CVjmzwtoUNdm8aqT8Zf2LLLuXszVFc/ZhFV6vnwQZGQ8
   imImExfNtGISXLsdJDvR2xb/Z/3vY8s6lBGoAGTvmlhdtZZNNghWwb1Dl5Ja30fz
   +YLgBSjtJw/psFfgRU5MuRu+4/tOTb3blBovqP1b3E938Sq5OmaYF3ZmDuCJqVer
   lbGo1BEFvSWENm9S5o18XiDAnZgXVMBdSithK/0U8YkCHAQQAQIABgUCVbHIZAAK
   CRAJRWOpNUbN9apnD/0WJ8mn3WCdlKMgUmk5L7+4tx0eifJX0ODYae0C8gGgR1ZD
   ZfEUe6Izu3qAMnNLACFy2qY9zI1cnv4eXM15R+sriDDLRfUZFgn+eFudoAlAwHMc
   lt2SD1BHEOwKzpE6ubHuroShK/LIy0csk7g2m0GdPvCt5DOf5Ns7RPUOWup1p0kh
   mihmw0PIwIRvA/Aex7ti+aEwo/vHXdAV47sd00RUaNzU2B4oG8qeDeMtuOWKQ3bF
   2qWqcbwm9kCBbQQJ3Zpwe9urAMNcYNqqplkY16oOW39dJOcbBIErQsxwUSsu3xl5
   hcnHx9geHlrfr6RGdyTrlHE2Pnr5qODDZTFNzpWbsb8LVRigooLvmjCHB1m9MXor
   3iaW5xOuCcMLBghzxMGzqqz7ihCLxQJpCQBXVWPoHrXm7+9hv+DXpL8DQc1fTpfY
   9tKKwAM0UI28FV8E/qY/veZgbGCXumI9TobkvqPN93iqnY3LVGq4TTA5nM22fx++
   Q7o1sPJg8mO9pn86n8D0ruHwiStoqvCesK5Et57xM2XpEN5TcRaM+B6+RvB22zvm
   XI1WwAKY7suSSE/baUdk/9+QG2LnqxXq7nosive4/hmFRaNy1d9ZgiFRYCpndeTI
   z+l5w+K2of4SVqE5lx7XXQDuipAnAECmiEXX0YRhJ0ITBTmIpiaIU76s8B8e2YkC
   HAQQAQIABgUCVjfgdAAKCRDe1ySh4EkgdZqLD/9KLrxkXafuqlO0EHjg4hj8sr+c
   XE36fpJk+SWQrMGKepYPAA7yXNebno3Fowv8Iyw8yiGj1QLPGNHbyhwIaUu3m7Sr
   Xyzec9dTOxZknzboj84HY0drfYuuMUlQ6TbFyayfTu/KoHoEM9oUNrj1h4p/MODR
   rdap3SNelKPA3db2AUpM2UK1KRDjoG/U/fkMvpuL8yn1FFwFNtg+k+5eThBwZpiF
   /nFW9y2GoF+clC5E1zoLbawFJTgr6JRcV3yQoBjGsHFsrKgA6/awC4w6NXnQGyrk
   IQIp6y9ibF7uQaxcpeDmczbzx9BvPe9e8F5O8nJQKyaDEem+As6Bzi70rfM4WOMv
   JXXHF2Z2vsc5J28oSTbU7JssoSrI9nh/pHC89zO7LnCE/pauJJLeQnhNJ7QTI42T
   KIG295TM8Vs+EzE0aY/1r60UXuuxJ7+AYas/d8KJTopJPxMNJTX2RZbR9aKY+iWi
   rYqsP4GeVsOmh4WBeQu9uEyWxkh0jWuoFiIjhZ/Ra3+7tywjBprTKWminytyLSMs
   5/v6WjoFYO3Oocs9mua6Ym22yPjLISauwzWgatTCkn4OX+UJ2UscJXN40miNsmVT
   HHZCZpZoiPpAli7jGrcQiqDps7VGqeh3WRVrOUiWNoe+RGjELnpcgyuSV6M9T9t6
   PRk6vYn/fLm02cN6ZbQrWmVwaHlyIFBlbGxlcmluIDx6ZXBoeXIucGVsbGVyaW5A
   Z21haWwuY29tPokBOAQTAQIAIgUCVAU33wIbAwYLCQgHAwIGFQgCCQoLBBYCAwEC
   HgECF4AACgkQ9vLQRF3Bcvi12Qf/VRWwsaAVtGY4a3pg3CuPi7c+2Hccl4C8/y+B
   B+2ZZNtboSzpad84/m3b8b01orDLtCd1pF89dgq405yahH19btZULtOWSPPgnf8e
   nPE3pRwNHZa6+kFIpLymudcbI7xqP6jXhENzB193MZDUQvYbiu1OocddJ6yY6CBN
   w9Fr5dH/GXrvr/UfQ4ggQ4Au79BwRGO4WolvDvZS0itPqAAiFTVAxsn9dZrSUUkv
   REfzvGL/h9lF44B3jy1YC5jsfBEDEhUithFL9mEzTVAk9I+tVO2Nn2sw5VAyQg/j
   6zSozgyizxVALVtUKSm+Y8drwIKENWMqZMnrf+5Jh9+tUnIXRokCHAQQAQIABgUC
   VbHIYAAKCRAJRWOpNUbN9ZztD/wPdK0WHObR08TqR0FVbiF0Ru9G/tkbcQERvwro
   Jan8VCaC9A1ZhFIEud3PknW/12SwlB7DnxupTsIbV2L/7BTdP58ipIqGu/mOhvqK
   jR0hPGhsfEjzTVH2LgRr/EqWR4eVJkjQXn5ZMfFU6g4nkp4ZxReE0Nn2sSKUqi3d
   0vRWTFvXHbcII3EZLf42BMVoHRssXU9CEQBTHycOVTGdZoTYOFZjMGm9K9vsoEGg
   xYliSlD41QmMXXkt89xEJQHHZJv9KpAPZhmx1kX+7mGP76pP7T6DwTTqVOGByF3i
   MZv0eId1tOdV05a9TkG6/LqjDCC0oevQsdzd7MYNSWdX8OKBeRrZhhA/HAdWhBBZ
   0zurG/5hBsGhfJatMNhak4RhxkZckOhzVNmbw9gtfXGuHbrKcTwi7jFT7HFGlnpB
   KjIqe+zlkwRQUM+ZYqhDCuNMqfoFygMD98vOOflxm5eRKdYQ/RdQbeUH9Q0IUsYh
   jKStzwCQLkUFwfVM5icFpVdEHdL5uEmTAgs7l9ovyDvIrGVJuVhj92SRWYYj1gjZ
   y1WzwVmzIgl5NUsTC3AF75Hy8A9AOJ//wJ+r4YZ7f5W6WtW+I9nwLmrXDbpnpCAe
   iTMF+0TNtW672R5+bgb8aW9OHiu4RIjFphP38NrboEp7vwSg6sQZha3lLIWftsXL
   GRa83okCHAQQAQIABgUCVjfgdAAKCRDe1ySh4EkgdU39EACisTwJIsXRnyfu4NmK
   zl5ZC9fM1nL0FQD1iK4tJHxVAW0+poX4BAosYFcJ4uQO2pv8nRkJB5XkUogexoXz
   lC9UiClU90AzyuqrMDVPhIX5RqdAYLh+svKSup+9Hb0GgUE505EGBjHla8TAvB2p
   ven7qUzBnGNCbaeOBg0wysyOZ65h1lLO/MV/O0n+hEFTxDA4Hw3J5hXlWKOoRkuZ
   ZCeFy4czt3hSfQZ57y6LLyEdNIdJfVnfZ0XM1C9nfNuqb2he2xwaRyCysl3cdM3a
   eln19g8kNqumQiUR9jF3SQHlt26f2tyAEr6QtW2TL3gT+V6QHOcql4WlcGjWDGUC
   Pn0nDax8Wx+i50nNwqByz59JvYwpHAWjEhM8aFTnlWsmDFVgn/ilv+84DhAiSHTY
   bqiurksAeS+JTjVepKstTepMvtjF/JmOK3vjn5RF4K+7nC3mWmpKPUz/zBoheOfZ
   tmzHtxNK7ES9RM6Ug7eRnTs24EXY+2T3EgUiXptLWTCP+QowmyslLyoaMP/YZMik
   B+dyciVmXMSGs+wQdWaYQl17XUfYRdUWPbCQoHRq8q4LyfGq6rcxYKir7O4nBxJF
   jeQxGiqoHuTHbflD427TQlSOplk8QG4JK0/Hb1qhYWgnqZcSQIkE0pYVzZh0TkAJ
   ncAlxoSicEvVt55nkdWQH92U+rkBDQRSa1V7AQgApnITxpbE9zP6B0rqlmxj2uiC
   lm25EMcRyS11xQdvTVpsm5C6dJK8bLaMn2gUJjiFgXxPlpc4gxR3giUAyZmDxD5b
   G4KBkhvlTHjdXctmzIpAIIonWkU9KgKfxihqplvjxUpk0ErxVaT2+5JzrgNM34lh
   tqS/krM8+GFvJuNopMOSmkaG3eZECt4sXapNsZcFYtsKE08Nc4WdqVeUqnchYVqF
   UAYqyNO/JFUy2TX15e2kEowWmqmNf3/5Tks2f04gbFBkyGinyT2xsTtsM71tRd+L
   +dfQql94uQvAuiMi07lewSVxkpMFozBqQAfDtRuDAm5oyFuHudxQXIEPdXnRVQAR
   AQABiQEfBBgBAgAJBQJSa1V7AhsMAAoJEPby0ERdwXL4DDsH/0slgtfAVdVGyYoA
   tntGKuh96wKfw91XVlbpnB8bz6B5g013knfnBizdHUxQ3l24h4seTEqmx9Ndovfw
   Wqlkt14Ukw9eJ+D37fUunU8bggO1nof7QjJGyE8phosmD6CYwrIz0BCdq2a1KCWT
   1cZokfES3qZ0K4Tr83eg7dDE6UJZDiFNbVqRmwYjZk/FPfhw/njRu1IxqC46U37Z
   LmbL6WIRJGfm29xM2zVYpNzs1ENqV83Gf3mJhOpEV58rfj/0chYEVCBPExyarOSA
   q6QsN+LWr+NYvXkknZTu2BC7RCpEKOMrDoqW19lMjm9mbc96k+ahtyNFhPTY54fA
   rcJ/Wq65AQ0EVg9kDQEIAIxsxjTVLzo6do/tDkf2Rgd4FR19OxmQaHUDBALVUkjB
   dEd2V1GKCQXEItHpAmQVVC3me2u69fAGt7VsMXThS95csu1yrY/mIZlaBC25UCxn
   UMAQ1Hk35IxljoMD9o+ODy3O/uUvT2nAWQDF9UNYsRle1wS64JpoZtb0YfvTswGe
   8xmfytYPwwQQR+WSu2ltMbGOuy5tioY4H1svc9MS2soECGm1ogciFfu1wcEehZUI
   2C3jtT7OCGDhVokiP9z5NRj7UJQX9Bap9aXoSfYnAuop7xGEfhKqBYy3pZjlcNe6
   skc2O2XNIJvB/yOtd9Jmr7rdYsXGp0g3KOp52QtJWGUAEQEAAYkBHwQYAQoACQUC
   Vg9kDQIbIAAKCRD28tBEXcFy+JQnB/4hy+3bKhibNedtw0CDGqixs0+XKZ4C9tzq
   XL71Eb3CNS/eOtVC+d47K4tnro2CV1AiZXv45vyLdj1jtj0j+ersZT+kclNM2PoM
   1XX2aUksTBI+1DXJawTFSQ6tyRVxh6fiAg5/pgWWaYiKiWmFrm/kazbXbddGNrN2
   FN+UcDY2XLxT0DCDvB2+vjm/bmvnL4KwXMLYB+FS8luwGb7xtvCkgi8nviwnoz2y
   HKXQEO7JMqmLn4mwsEbVvKDkO02ix+S/Ynx+ZH/eVfZ7TZKxgQuZGXzAA7aanPkw
   DLI1eJT43vWNNtNFx71ooBsQICgdXEg1KI25zBMXbRs+xFwD0e1L
   =MHwq
   -----END PGP PUBLIC KEY BLOCK-----
   #+END_EXAMPLE

** =authorized_keys=
   #+BEGIN_EXAMPLE
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCMbMY01S86OnaP7Q5H9kYHeBUdfTsZkGh1AwQC1VJIwXRHdldRigkFxCLR6QJkFVQt5ntruvXwBre1bDF04UveXLLtcq2P5iGZWgQtuVAsZ1DAENR5N+SMZY6DA/aPjg8tzv7lL09pwFkAxfVDWLEZXtcEuuCaaGbW9GH707MBnvMZn8rWD8MEEEflkrtpbTGxjrsubYqGOB9bL3PTEtrKBAhptaIHIhX7tcHBHoWVCNgt47U+zghg4VaJIj/c+TUY+1CUF/QWqfWl6En2JwLqKe8RhH4SqgWMt6WY5XDXurJHNjtlzSCbwf8jrXfSZq+63WLFxqdINyjqedkLSVhl zv@sigstkflt
ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJZiX9CJyfQ2QYkm9Sh+BRoQVeM5UACdbOhf8PYfrwSC zv@sigstkflt
   #+END_EXAMPLE

* Workstation Setup

** Linux  
*** Fedora
**** Groups
     #+begin_src sh
sudo dnf install "@Development Tools" "@C Development Tools and Libraries"
     #+end_src

*** org-protocol
    org-protocol intercepts calls from emacsclient to trigger custom actions without external dependencies. Only one protocol has to be configured with your external applications or the operating system, to trigger an arbitrary number of custom actions. 
   
    :PROPERTIES:
    :header-args:  :tangle "$HOME/.local/share/applications/org-protocol.desktop"
    :END:
    #+begin_src desktop
 [Desktop Entry]
 Name=org-protocol
 Exec=emacsclient %u
 Type=Application
 Terminal=false
 Categories=System;
 MimeType=x-scheme-handler/org-protocol;
 EOF
    #+end_src

    Afterwards, you must update the desktop database to ensure the =org-protocol=
    handler is installed.

    #+begin_example
    update-desktop-database ~/.local/share/applications/
    #+end_example

*** polkit
    polkit is an application-level toolkit for defining and handling the policy that allows unprivileged processes to speak to privileged processes: It is a framework for centralizing the decision making process with respect to granting access to privileged operations for unprivileged applications.
   
**** =libvirt=   
     =libvirt= will complain about user-sessions hitting a root, I allow any user in =wheel= to do so anyway on my workstation.
     :PROPERTIES:
     :header-args: :tangle "/etc/polkit-1/rules.d/80-libvirt.rules"
     :END:
     #+begin_src 
  polkit.addRule(function(action, subject) {
    if (action.id == "org.libvirt.unix.manage" && subject.local && subject.active && subject.isInGroup("wheel")) {
      return polkit.Result.YES;
    }
  });
     #+end_src

*** =udev=
    =udev= is a device manager for the Linux kernel. As the successor of =devfsd= and =hotplug=, =udev= primarily manages device nodes in the =/dev= directory. At the same time, =udev= also handles all user space events raised while hardware devices are added into the system or removed from it, including firmware loading as required by certain devices.
   
**** yubikey
     add Yubikey access
     :PROPERTIES:
     :header-args: :tangle "/etc/udev/rules.d/70-u2f.rules"
     :END:
     #+begin_src 
 # Yubico YubiKey
 ATTRS{idVendor}=="1050", ATTR{manufacturer}=="Yubico", TAG+="uaccess"
     #+end_src

**** wireshark usbmon
     :PROPERTIES:
     :header-args: :tangle "/etc/udev/rules.d/rules.d/90-wireshark-usbmon.rules"
     :END:
     #+begin_src 
 SUBSYSTEM=="usbmon", GROUP="usbmon", MODE="640"
     #+end_src
*** systemd
**** =fstrim=
     The =util-linux= package provides =fstrim.service= and =fstrim.timer= systemd unit files. Enabling the timer will activate the service weekly. The service executes =fstrim(8)= on all mounted filesystems on devices that support the discard operation.
***** Service
       :PROPERTIES:
       :header-args: :tangle "/usr/lib/systemd/system/fstrim.service"
       :END:
  #+begin_src 
[Unit]
Description=Discard unused blocks

[Service]
Type=oneshot
ExecStart=/sbin/fstrim -a

[Install]
WantedBy=multi-user.target
  #+end_src
***** Timer
       :PROPERTIES:
       :header-args: :tangle "/usr/lib/systemd/system/fstrim.timer"
       :END:
  #+begin_src 
  [Unit]
  Description=Discard unused blocks once a week
  Documentation=man:fstrim

  [Timer]
  OnCalendar=weekly
  AccuracySec=1h
  Persistent=true

  [Install]
  WantedBy=multi-user.target
  #+end_src
**** =coredump=
     I've never ended up with 20 gigabytes of coredump files, but I'd like to avoid it.
     :PROPERTIES:
     :header-args: :tangle "/etc/systemd/coredump.conf"
     :END:
#+begin_src 
Compress=yes
JournalSizeMax=520M
MaxUse=1G
#+end_src
**** =journald=
     :PROPERTIES:
     :header-args: :tangle "/etc/systemd/journald.conf"
     :END:
#+begin_src 
Compress=yes
SystemMaxUse=512M
#+end_src
*** =dnf=
     dnf is fedora's package manager. I mostly like how it's configured except I dislike receiving kernels through it.
     :PROPERTIES:
     :header-args: :tangle "/etc/dnf/dnf.conf"
     :END:
#+begin_src 
[main]
gpgcheck=1
installonly_limit=3
clean_requirements_on_remove=True
exclude=kernel*
#+end_src
*** vkeys
    Use capslock as control in a virtual console
    #+begin_example
    sudo dumpkeys | head -1 | cat - <(echo "keycode 58 = Control") | sudo loadkeys
    #+end_example

*** gnome-terminal
    I prefer a smaller padding on my gnome terminal.
     :PROPERTIES:
     :header-args: :tangle "/home/zv/.config/gtk-3.0/gtk.css"
     :END:
     #+begin_example
vte-terminal {
  padding: 5px
}
     #+end_example

     You can also remove the ridiculously huge headerbar in Gnome 3.32+
#+begin_src sh
gsettings set org.gnome.Terminal.Legacy.Settings headerbar false
#+end_src

*** gnome-flashback copr
    You can find COPR produced by a Redhat employee here: https://copr.fedorainfracloud.org/coprs/yselkowitz/gnome-flashback/

*** NetworkManager
    NetworkManager is a program for providing detection and configuration for systems to automatically connect to network.

    I use a local resolver (=dnsmasq=) instead of those provided by DHCP.
**** Enable =dnsmasq=
***** =NetworkManager.conf=
      You must ensure NetworkManager globally enables local resolver =dnsmasq=
      :PROPERTIES:
      :header-args: :tangle "/etc/NetworkManager/NetworkManager.conf"
      :END:
     #+begin_example
     [main]
     dns=dnsmasq
     #+end_example

***** =dnsmasq.conf=
      This will tack on these servers to the list recieved by DHCP.
      :PROPERTIES:
      :header-args: :tangle "/etc/NetworkManager/dnsmasq.d/server.conf"
      :END:
     #+begin_example
     server=8.8.8.8
     server=1.1.1.1
     #+end_example

*****

* Backup
** Thunderbird
   Thunderbird provides an excellent RSS reader and I keep a list of the feeds which I consume in =thunderbird/zv-feeds.opml=.
** =dconf=
   dconf is a low-level configuration system. Its main purpose is to provide a backend to GSettings on platforms that don't already have configuration storage systems.

*** gnome-terminal
    #+begin_src shell
      dconf dump /org/gnome/terminal/ > gnome_terminal_settings_backup.txt
    #+end_src

** keyring
   Gnome Keyring (accessible through Seahorse) stores it's keys in =~/.local/share/keyrings=. Anytime I'm backing keys up, I encrypt it first.
#+begin_src 
KEYRING_PATH="$HOME/.local/share/keyrings"
tar --create -C $KEYRING_PATH(:h) --wildcards -O $KEYRING_PATH(:t) \
        | gpg --encrypt -r zv@nxvr.org -o gnome-keyring.tar.gpg
#+end_src
*** restore
    #+begin_src 
   # Use gpg not gnome ssh-agent
    if [[ $(gconftool-2 --get /apps/gnome-keyring/daemon-components/ssh) != "false" ]]; then
        gconftool-2 --type bool --set /apps/gnome-keyring/daemon-components/ssh false
    fi
    gpg2 -d gnome-keyring.tar.gpg > gnome-keyring.tar
    tar xvf gnome-keyring.tar
    mv keyrings ~/.local/share/keyrings
    #+end_src

** My files and folder
   #+begin_src sh
tar -a -c -v -f /run/media/zv/02A9-16E4/backup.tar.gz ~/Development ~/Backup ~/Books ~/Documents ~/dotfilez ~/zv.github.io
   #+end_src
