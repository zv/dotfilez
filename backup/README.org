* Backup
** Checklist
   - [-] Bookmarks
     - [ ] Firefox
     - [ ] Thunderbird
     - [X] Chrome
   - [ ] GNOME Keyring
   - [ ] Thunderbird
   - [ ] GPG
     - [ ] Export public key ring (=pubring.gpg=)
     - [ ] Export owner-trust list (=owner_trust.lst=)
   - [ ] Credentials
     - [ ] netrc (~$HOME/.netrc~)
     - [ ] authinfo (~$HOME/.authinfo~)
     - [ ] Kubernetes (~$HOME/.kube/config~)
     - [ ] AWS (~$HOME/.aws/{config,credentials}~)
   - [ ] Code
     - [ ] Push all branches with changes not pushed to ~master~
     - [ ] Backup any without remotes
   - [ ] Virtual Machines
   - [ ] SSH
     - [ ] Check for system-specific private keys in ~$HOME/.ssh/id_*~
   - [ ] History
     - [ ] ~$HOME/.zsh_history~
     - [ ] ~$HOME/.psql_history-*~
     - [ ] ~$HOME/.bash_history-*~
     - [ ] ~$HOME/.ipython/profile_default/history.sqlite*~
   - [ ] Documents
     - [ ] ~$HOME/Documents~
     - [ ] ~$HOME/Books~
     - [ ] ~$HOME/Pictures~
     - [ ] ~$HOME/Music~


** Home
   :PROPERTIES:
   :header-args: :dir home
   :END:

   #+BEGIN_SRC sh :results output
     tar --create \
         --preserve-permissions \
         --posix \
         --one-file-system \
         --auto-compress \
         --exclude-backups \
         --exclude-vcs \
         --exclude-from=".tar_exclude" \
         --file "home.tar" \
         --directory="$HOME" \
         ".aws/config" \
         ".aws/credentials" \
         ".kube/config" \
         ".bash_history" \
         ".zsh_history" \
         ".local/share/keyrings" \
         "Backup" \
         "Books" \
         "Documents" \
         "Music" \
         "Pictures"
   #+END_SRC

** Development
*** Prepare
    #+BEGIN_SRC sh :results output
      for dir in $HOME/Development/*/; do
          (
              cd "$dir"
              if test -d ".git"; then
                  if git remote get-url origin 2>&1 >/dev/null; then
                      git master-cleanse
                      git remote prune origin
                      if git branch --no-merged origin/master >/dev/null; then
                          printf "%s has unmerged branches\n" "$dir"
                          git repacker 2>&1 >/dev/null
                      else
                          printf "%s is fully merged, may be deleted\n" "$dir"
                      fi
                  else
                      printf "%s has no 'origin' remote\n" "$dir"

                  fi
              else
                  printf "%s is not a git repository\n" "$dir"
              fi
          )
      done
    #+END_SRC

** Thunderbird
   :PROPERTIES:
   :header-args: :dir thunderbird
   :END:

*** Profile
    #+BEGIN_SRC sh
      if test -d "$HOME/.thunderbird/"; then
          tar --create \
              -C "$HOME/.thunderbird/" \
              --exclude-from=".tar_exclude" \
              --file "thunderbird.tar"
      else
          printf "No thunderbird profile found at %s\n" "$HOME/.thunderbird/"
      fi
    #+END_SRC

**** Restore
     #+BEGIN_SRC sh
       tar --extract --file "$THUNDERBIRD_PROFILE_ARCHIVE" --directory "$HOME/.thunderbird"
     #+END_SRC

** Gnome
   :PROPERTIES:
   :header-args: :dir gnome
   :END:

*** Keybindings
**** Backup
     #+NAME: keybindings.sh
     #+BEGIN_SRC sh :results file :file keybindings.sh
       local schema
       local key
       local value
       schema="org.gnome.desktop.wm.keybindings"
       for key in $(gsettings list-keys "$schema"); do
           value="$(gsettings get "$schema" "$key")"

           if [[ "$?" -eq 0 && ! -z "$value" ]]; then
               printf "gsettings set %s %s %s\n" "$schema" "$key" "$value"
           fi
       done
     #+END_SRC

**** Restore

     #+BEGIN_SRC sh :results output
       gsettings set org.gnome.desktop.input-sources xkb-options "['caps:nocaps', 'ctrl:ralt_rctrl', 'ctrl:rctrl_ralt']"
     #+END_SRC

*** =gnome-terminal=
**** Backup
     #+NAME: gnome-terminal-themes.dconf
     #+BEGIN_SRC sh :results file :file gnome-terminal-themes.dconf
       dconf dump /org/gnome/terminal/
     #+END_SRC

**** Restore
     #+BEGIN_SRC sh
       dconf load gnome-terminal-themes.dconf
     #+END_SRC

** GnuPG
   :PROPERTIES:
   :header-args: :dir gnupg
   :END:

*** Backup
    #+NAME: owner_trust.lst
    #+BEGIN_SRC sh :results file :file owner_trust.lst
      gpg --export-ownertrust
    #+END_SRC

    #+BEGIN_SRC sh :results silent
      cp ~/.gnupg/pubring.gpg pubring.gpg
    #+END_SRC

*** Restore
    #+BEGIN_SRC sh :results output
      gpg --import-options restore --import pubring.gpg
      gpg --import-ownertrust owner_trust.lst
    #+END_SRC
